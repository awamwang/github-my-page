<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wm&#39;s Blog</title>
  
  <subtitle>乱弹</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://keepgoingwm.github.io/"/>
  <updated>2018-09-06T16:51:37.887Z</updated>
  <id>https://keepgoingwm.github.io/</id>
  
  <author>
    <name>wm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【效率提升】ALMRun可以怎么玩</title>
    <link href="https://keepgoingwm.github.io/posts/14481/"/>
    <id>https://keepgoingwm.github.io/posts/14481/</id>
    <published>2018-09-06T13:50:00.000Z</published>
    <updated>2018-09-06T16:51:37.887Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="almrun可以怎么玩">ALMRun可以怎么玩</span></h1><h2><span id="almrun缘起">ALMRun缘起</span></h2><p>~ 从前有一种信仰叫做“唯快不破”，认为一个只靠键盘就能把电脑玩的飞起的码农才是一个有逼格的码农<br>~ 从前有个软件叫ALTRun，用快捷键+快捷入口就能唤起所有可执行程序，从此再也不用劳神找图标</p><blockquote><p><a href="http://www.appinn.com/altrun/" target="_blank" rel="noopener">http://www.appinn.com/altrun/</a></p></blockquote><p>~ 后来ALTRun很久都不更新了，有些满足不了码农的胃口了，这个时候出现了它的进阶版<strong>ALMRun</strong></p><h2><span id="almrun简介">ALMRun简介</span></h2><p>~ ALMRun是一款快速启动软件，准确的讲是一款全局快捷入口配置软件，它的特点有——<strong>方便</strong>、<strong>可扩展</strong>、<strong>开源</strong></p><blockquote><p>快捷入口：这里说的快捷入口是调出一个输入框，输入特定的字符，软件会过滤出想要的快捷启动条目，然后可以通过回车直接启动相应程序（其实不光是程序）<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/21642830.jpg" alt="tupian"></p></blockquote><p>~ 可以从下面资源中获取进一步的信息<br>  ~ 源码: <a href="https://github.com/chenall/ALMRun" target="_blank" rel="noopener">https://github.com/chenall/ALMRun</a><br>  ~ 博客: <a href="http://chenall.net/post/alrun-merry/" target="_blank" rel="noopener">http://chenall.net/post/alrun-merry/</a><br>  ~ 主页: <a href="http://almrun.chenall.net" target="_blank" rel="noopener">http://almrun.chenall.net</a></p><h2><span id="almrun玩法">ALMRun玩法</span></h2><p>下面的内容仅仅是个人使用的一些经验，想知道具体的操作方法、软件的预设情况、软件的配置方法以及扩展开发的方法，请从上面给出的资源中了解</p><h3><span id="almrun基础玩法">ALMRun基础玩法</span></h3><p>~ ALMRun全局热键为Alt + Run（这与ALTRun）相同<br>~ 右键任务栏图标可以找到“命令管理”，这里可以配置快捷入口（快捷入口-&gt;执行命令的对应）</p><h4><span id="自动生成已安装软件的快捷入口">自动生成已安装软件的快捷入口</span></h4><p>ALMRun支持添加“自动扫描目录”，指定目录，指定文件后缀名过滤条件，ALMRun会调用lua脚本自动生成一些快捷入口<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/58291620.jpg" alt="tupian"></p><h4><span id="打开常用程序">打开常用程序</span></h4><p>以打开Sublime Text为例，只要把命令设置为可执行文件的路径<code>E:\Program Files\Sublime Text 3\sublime_text.exe</code>就可以了<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/23878124.jpg" alt="tupian"></p><h4><span id="打开常用文件夹">打开常用文件（夹）</span></h4><p>与上面一样，只要把命令设置为文件（夹）路径，比如html的标签和属性的本地文档<code>E:\01wangmeng\04学习\01编程语言\Html5\HTML5中文手册.pdf</code></p><h4><span id="执行cmd命令">执行cmd命令</span></h4><p>常用的一些cmd命令，可以直接从快捷入口执行命令，这时你可以给快捷入口一个方便记忆与使用的名字<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/46486187.jpg" alt="tupian"></p><h3><span id="almrun花式玩法">ALMRun花式玩法</span></h3><h4><span id="指定浏览器打开特定页面">指定浏览器打开特定页面</span></h4><p>这个用法涉及了三个功能点：</p><p>~ 支持环境变量的引用<br>~ 支持url类命令<br>~ 支持调用快捷入口时添加参数</p><h5><span id="配置环境变量">配置环境变量</span></h5><p>这里在Windows的环境变量中给谷歌Chrome浏览器配一个环境变量<br>C:\Users\wangmeng\AppData\Local\Google\Chrome\Application\chrome.exe<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/96556879.jpg" alt="tupian"></p><h5><span id="引用环境变量">引用环境变量</span></h5><p>快捷入口中的命令直接引用系统的环境变量<br>%CHROME_PATH% <a href="https://developer.mozilla.org/zh-CN/search?q={\%p}" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/search?q={\%p}</a><br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/26165247.jpg" alt="tupian"></p><h5><span id="使用快捷入口时添加参数">使用快捷入口时添加参数</span></h5><p>在目标快捷入口过滤成为第一个或唯一一个时，按下<code>Tab</code>键，然后就可以输入参数了，这个使用方法还是挺能发挥想象力的<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/11728746.jpg" alt="tupian">  </p><h4><span id="指定目录运行命令">指定目录运行命令</span></h4><p>这条看似与基础用法中的某条没什么区别，实际是想表达一个思路：一些需要指定目录执行的命令，也是可以使用快捷入口的。（如果这下面是一个工程构建脚本呢，是一个项目备份脚本呢）<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/16-5-26/50200006.jpg" alt="tupian">  </p><h4><span id="待发现">待发现</span></h4><h2><span id="啰嗦两句">啰嗦两句</span></h2><p>~ ALMRun支持ALTRun的导入，具体见ALMRun的README<br>~ 一个工具的使用是一个不断磨合的过程，只有不断调教训练后，她才真正成为你的菜</p><p><strong>注意</strong>：<br>环境变量配置完后，需要ALMRun重启生效</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;almrun可以怎么玩&quot;&gt;ALMRun可以怎么玩&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;almrun缘起&quot;&gt;ALMRun缘起&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;~ 从前有一种信仰叫做“唯快不破”，认为一个只靠键盘就能把电脑玩的飞起的码农才是一个有
      
    
    </summary>
    
      <category term="效率提升" scheme="https://keepgoingwm.github.io/categories/%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/"/>
    
      <category term="工具" scheme="https://keepgoingwm.github.io/categories/%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="效率提升" scheme="https://keepgoingwm.github.io/tags/%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/"/>
    
  </entry>
  
  <entry>
    <title>【读书笔记】人月神话</title>
    <link href="https://keepgoingwm.github.io/posts/41630/"/>
    <id>https://keepgoingwm.github.io/posts/41630/</id>
    <published>2018-09-04T14:03:00.000Z</published>
    <updated>2018-09-07T12:41:43.988Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="一">一</span></h2><p>感谢大小公司和测试开发岗位的各种经历，让我能够看懂这本书，同时又能冷静而不悲观的看待当下的工作环境。</p><p>这本人月神话对得起它的神坛高位，它从实践经验论述了软件工程逃不脱的效率问题，同时大量的数据和事实让论述有理有据。作者提出一个10人的团队单元模型，我们读者看重的是借鉴，可能需要针对它的普适性和时效性进行不断验证。就目前软件开发的局面来说，我认为这个模型是个很优的解法，虽然很多开发人员和高层老板都不会认同。这个模型理想化不易实现的地方可能在于，它要求团队有一半成员能力超凡且态度积极，我目前还没有感受过这样的团队。</p><p>什么是人月神话，没读以前，我以为这是个情怀书名——软件开发之于登月，对话宇宙，类似微信登录画面那种情怀。可惜这种猜测枉费了那些年估算工作量的经验，人·月神话，就是本身10人10个月的项目，弄100个人1个月就能搞定。如书名，这种工作量或工作效率的换算是个神话，不切实际，那么原因是什么？</p><p>这本书给出的核心原因——沟通，这个沟通我概括为纵向沟通和网状沟通。纵向沟通是上游人员传递给下游人员，老人员传递给新人员的沟通，这种沟通的成本因为下游人员，新人员的增多而提高。还好，它们看起来是线性的，增加多少人，就增加多少分沟通成本。网状沟通就是所有成员相互的沟通，这种沟通成本的增加几乎是指数级别的，因为一般的成员组织架构下，一个成员几乎要与其他每个成员产生沟通。虽然与不同成员沟通有多又少，但是在总成员少的情况下，也同样有多又少，成员多了，多出来的就是近似N<em>N - n</em>n的成本。其他一些原因是思维缺陷、怠慢、时间拖延产生的消耗和往复，就不细谈了。</p><h2><span id="二">二</span></h2><p>本书有几个值得思考和借鉴的理论：</p><p>~ 1/3计划、1/6编码、1/4构件测试以及1/4系统测试：这是个开发流程时间配比，注意真正编码的时间只有1/6，我相信很多人都没这么想过，甚至很多人读完本书都不一定能接受这个配比。</p><p>~ 优秀的专业程序员的工作效率是较差程序员的十倍：这个观点在另一本著作《黑客与画家》中也提到，而且更夸张，那本书里面是以开发的功能产生的收益来衡量效率，不一定客观，但足以说明问题。</p><p>~ 概念完整性是系统设计中最重要的考虑因素：这里的概念完整性大概是实现对设计的还原度和遵循性，隐含了设计的满足需求程度和完善性。设计者提供“专治”化的规格，实现者考虑实现方法。</p><p>~ 文档很重要：它用来指导正确的工作，抵消沟通成本。</p><p>~ 对于一个广泛使用的程序，其维护总成本通常是开发成本的40％或更多；缺陷修复总会以（20－50）%的机率引入新的bug。想要避免两个可怕的概率兴风作浪，我们需要规范的开发流程、bug修复流程，还有使用能消除、至少是能指明副作用的程序设计方法，例如函数式编程。</p><p>~ 里程碑必须是具体的、特定的、可度量的事件：进度规划目前看绝对不是估算人月，这项工作至少包含了关键路径的学问，可能需要更专业的人员来掌控。所知甚少，细思极恐。</p><h2><span id="三">三</span></h2><p>本书以“焦油坑”入题，40年了，结尾章节依然没呼应第一章。也就是说，整个行业都还在爬，如何爬上来，还需要后续的探索。好在如我之流，曾经热血与愤愤，读过本书，淡定明白了不少。</p><p>其他细节与经验，还是要到书中感悟与学习。如此经典，资深开发人员和底层管理者花一天读完，不算浪费时间。</p><p>另外，不要盲目执行与实践，书中精髓可能可能还是套内功，不要只学招式，这空架子很容易惹来杀身之祸，不是江湖儿女应有之举。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;一&quot;&gt;一&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;感谢大小公司和测试开发岗位的各种经历，让我能够看懂这本书，同时又能冷静而不悲观的看待当下的工作环境。&lt;/p&gt;
&lt;p&gt;这本人月神话对得起它的神坛高位，它从实践经验论述了软件工程逃不脱的效率问题，同时大量的数据和事实让
      
    
    </summary>
    
      <category term="读书笔记" scheme="https://keepgoingwm.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://keepgoingwm.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Githug解题方法</title>
    <link href="https://keepgoingwm.github.io/posts/32632/"/>
    <id>https://keepgoingwm.github.io/posts/32632/</id>
    <published>2018-07-18T02:52:00.000Z</published>
    <updated>2018-07-18T08:40:44.394Z</updated>
    
    <content type="html"><![CDATA[<p>Githug是一个git练习游戏<br><a href="https://segmentfault.com/a/1190000004222489" target="_blank" rel="noopener">https://segmentfault.com/a/1190000004222489</a><br><a href="https://github.com/Gazler/githug" target="_blank" rel="noopener">https://github.com/Gazler/githug</a></p><h2><span id="通用操作">通用操作</span></h2><p>首先，设置一个自己习惯的编辑器</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global core.editor vim</span><br></pre></td></tr></table></figure><p>其次，如果需要的话，配置一些别名，会方便些<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global alias.co checkout</span><br><span class="line">git<span class="built_in"> config </span>--global alias.st status</span><br><span class="line">git<span class="built_in"> config </span>--global alias.rt remote</span><br></pre></td></tr></table></figure></p><h2><span id="攻略">攻略</span></h2><blockquote><p>基于v0.5.0</p></blockquote><blockquote><hr><ul><li>Githug                                    *</li></ul><hr><p>No githug directory found, do you wish to create one? [yn]  y<br>Welcome to Githug!</p></blockquote><ul><li>1</li></ul><blockquote><p>Name: init<br>Level: 1<br>Difficulty: *</p></blockquote><p>A new directory, <code>git_hug</code>, has been created; initialize an empty repository in it.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git init</span></span><br></pre></td></tr></table></figure><ul><li>2</li></ul><blockquote><p>Name: config<br>Level: 2<br>Difficulty: *</p></blockquote><p>Set up your git name and email, this is important so that your commits can be identified.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"Your Name"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"Your Email"</span></span><br></pre></td></tr></table></figure><ul><li>3</li></ul><blockquote><p>Name: add<br>Level: 3<br>Difficulty: *</p></blockquote><p>There is a file in your folder called <code>README</code>, you should add it to your staging area<br>Note: You start each level with a new repo. Don’t look for files from the previous one.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> README</span></span><br></pre></td></tr></table></figure><ul><li>4</li></ul><blockquote><p>Name: commit<br>Level: 4<br>Difficulty: *</p></blockquote><p>The <code>README</code> file has been added to your staging area, now commit it.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am "README"</span><br></pre></td></tr></table></figure><ul><li>5</li></ul><blockquote><p>Name: clone<br>Level: 5<br>Difficulty: *</p></blockquote><p>Clone the repository at <a href="https://github.com/Gazler/cloneme" target="_blank" rel="noopener">https://github.com/Gazler/cloneme</a>.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Gazler/cloneme</span><br></pre></td></tr></table></figure><ul><li>6</li></ul><blockquote><p>Name: clone_to_folder<br>Level: 6<br>Difficulty: *</p></blockquote><p>Clone the repository at <a href="https://github.com/Gazler/cloneme" target="_blank" rel="noopener">https://github.com/Gazler/cloneme</a> to <code>my_cloned_repo</code>.</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/Gazler/cloneme my_cloned_repo</span><br></pre></td></tr></table></figure><ul><li>7</li></ul><blockquote><p>Name: ignore<br>Level: 7<br>Difficulty: **</p></blockquote><p>The text editor ‘vim’ creates files ending in <code>.swp</code> (swap files) for all files that are currently open.  We don’t want them creeping into the repository.  Make this repository ignore <code>.swp</code> files.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">vi</span> <span class="selector-class">.gitignore</span></span><br></pre></td></tr></table></figure><p>在最后插入<code>*.swp</code></p><ul><li>8</li></ul><blockquote><p>Name: include<br>Level: 8<br>Difficulty: **</p></blockquote><p>Notice a few files with the ‘.a’ extension.  We want git to ignore all but the ‘lib.a’ file.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">vi</span> <span class="selector-class">.gitignore</span></span><br></pre></td></tr></table></figure><p>在最后插入<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*.a</span><br><span class="line">!<span class="class"><span class="keyword">lib</span>.<span class="title">a</span></span></span><br></pre></td></tr></table></figure></p><ul><li>9</li></ul><blockquote><p>Name: status<br>Level: 9<br>Difficulty: *</p></blockquote><p>There are some files in this repository, one of the files is untracked, which file is it?</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">githug</span></span><br><span class="line"><span class="selector-tag">database</span><span class="selector-class">.yml</span></span><br></pre></td></tr></table></figure><ul><li>10</li></ul><blockquote><p>Name: number_of_files_committed<br>Level: 10<br>Difficulty: *</p></blockquote><p>There are some files in this repository, how many of the files will be committed?</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">githug</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>11</li></ul><blockquote><p>Name: rm<br>Level: 11<br>Difficulty: **</p></blockquote><p>A file has been removed from the working tree, however the file was not removed from the repository.  Find out what this file was and remove it.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rm deleteme.rb</span><br><span class="line">git commit -am <span class="string">"rm"</span></span><br></pre></td></tr></table></figure><ul><li>12</li></ul><blockquote><p>Name: rm_cached<br>Level: 12<br>Difficulty: **</p></blockquote><p>A file has accidentally been added to your staging area, find out which file and remove it from the staging area.  <em>NOTE</em> Do not remove the file from the file system, only from git.</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm <span class="comment">--cache deleteme.rb</span></span><br></pre></td></tr></table></figure><ul><li>13</li></ul><blockquote><p>Name: stash<br>Level: 13<br>Difficulty: **</p></blockquote><p>You’ve made some changes and want to work on them later. You should save them, but don’t commit them.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git stash</span></span><br></pre></td></tr></table></figure><ul><li>14</li></ul><blockquote><p>Name: rename<br>Level: 14<br>Difficulty: ***</p></blockquote><p>We have a file called <code>oldfile.txt</code>. We want to rename it to <code>newfile.txt</code> and stage this change.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git mv oldfile<span class="selector-class">.txt</span> newfile.txt</span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><ul><li>15</li></ul><blockquote><p>Name: restructure<br>Level: 15<br>Difficulty: ***</p></blockquote><p>You added some files to your repository, but now realize that your project needs to be restructured.  Make a new folder named <code>src</code> and using Git move all of the .html files into this folder.</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir src</span><br><span class="line">git mv *<span class="string">.html</span> <span class="string">./src/</span></span><br></pre></td></tr></table></figure><ul><li>16</li></ul><blockquote><p>Name: log<br>Level: 16<br>Difficulty: **</p></blockquote><p>You will be asked for the hash of most recent commit.  You will need to investigate the logs of the repository for this.</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><ul><li>17</li></ul><blockquote><p>Name: tag<br>Level: 17<br>Difficulty: **</p></blockquote><p>We have a git repo and we want to tag the current commit with <code>new_tag</code>.</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">new_tag</span></span><br></pre></td></tr></table></figure><ul><li>18</li></ul><blockquote><p>Name: push_tags<br>Level: 18<br>Difficulty: **</p></blockquote><p>There are tags in the repository that aren’t pushed into remote repository. Push them now.</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push <span class="comment">--tags</span></span><br></pre></td></tr></table></figure><ul><li>19</li></ul><blockquote><p>Name: commit_amend<br>Level: 19<br>Difficulty: **</p></blockquote><p>The <code>README</code> file has been committed, but it looks like the file <code>forgotten_file.rb</code> was missing from the commit.  Add the file and amend your previous commit to include it.</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git </span><span class="string">commit </span><span class="built_in">--amend</span> -m <span class="string">'new_commit'</span></span><br></pre></td></tr></table></figure><ul><li>20</li></ul><blockquote><p>Name: commit_in_future<br>Level: 20<br>Difficulty: **</p></blockquote><p>Commit your changes with the future date (e.g. tomorrow).</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"message"</span> --<span class="keyword">date</span> <span class="string">"Tue Jul 19 23:00:00 2018 +0800"</span> <span class="comment">// 要使用明天的日期</span></span><br></pre></td></tr></table></figure><ul><li>21</li></ul><blockquote><p>Name: reset<br>Level: 21<br>Difficulty: **</p></blockquote><p>There are two files to be committed.  The goal was to add each file as a separate commit, however both were added by accident.  Unstage the file <code>to_commit_second.rb</code> using the reset command (don’t commit anything).</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="keyword">HEAD</span> to_commit_second.rb</span><br></pre></td></tr></table></figure><ul><li>22</li></ul><blockquote><p>Name: reset_soft<br>Level: 22<br>Difficulty: **</p></blockquote><p>You committed too soon. Now you want to undo the last commit, while keeping the index.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">reset</span> <span class="comment">--soft 7075e0120c2276e13265ece68a0fd64594d24175</span></span><br></pre></td></tr></table></figure><ul><li>23</li></ul><blockquote><p>Name: checkout_file<br>Level: 23<br>Difficulty: ***</p></blockquote><p>A file has been modified, but you don’t want to keep the modification.  Checkout the <code>config.rb</code> file from the last commit.</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout <span class="built_in">config</span>.rb</span><br></pre></td></tr></table></figure><ul><li>24</li></ul><blockquote><p>Name: remote<br>Level: 24<br>Difficulty: **</p></blockquote><p>This project has a remote repository.  Identify it.</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> remote -v</span><br><span class="line">githug</span><br><span class="line">my_remote_repo</span><br></pre></td></tr></table></figure><ul><li>25</li></ul><blockquote><p>Name: remote_url<br>Level: 25<br>Difficulty: **</p></blockquote><p>The remote repositories have a url associated to them.  Please enter the url of remote_location.</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">githug</span><br><span class="line">https:<span class="regexp">//gi</span>thub.com<span class="regexp">/githug/</span>not_a_repo</span><br></pre></td></tr></table></figure><ul><li>26</li></ul><blockquote><p>Name: pull<br>Level: 26<br>Difficulty: **</p></blockquote><p>You need to pull changes from your origin repository.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git pull origin</span></span><br></pre></td></tr></table></figure><ul><li>27</li></ul><blockquote><p>Name: remote_add<br>Level: 27<br>Difficulty: **</p></blockquote><p>Add a remote repository called <code>origin</code> with the url <a href="https://github.com/githug/githug" target="_blank" rel="noopener">https://github.com/githug/githug</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">add</span> origin http<span class="variable">s:</span>//github.<span class="keyword">com</span>/githug/githug</span><br></pre></td></tr></table></figure><ul><li>28</li></ul><blockquote><p>Name: push<br>Level: 28<br>Difficulty: ***</p></blockquote><p>Your local master branch has diverged from the remote origin/master branch. Rebase your commit onto origin/master and push it to remote.</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull origin <span class="keyword">master</span> <span class="title">--rebase</span></span><br><span class="line">git push origin <span class="literal">master</span></span><br></pre></td></tr></table></figure><ul><li>29</li></ul><blockquote><p>Name: diff<br>Level: 29<br>Difficulty: **</p></blockquote><p>There have been modifications to the <code>app.rb</code> file since your last commit.  Find out which line has changed.</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br><span class="line">githug</span><br><span class="line"><span class="number">26</span></span><br></pre></td></tr></table></figure><ul><li>30</li></ul><blockquote><p>Name: blame<br>Level: 30<br>Difficulty: **</p></blockquote><p>Someone has put a password inside the file <code>config.rb</code> find out who it was.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">blame </span><span class="built_in">config</span>.rb</span><br><span class="line">githug</span><br><span class="line">Spider Man</span><br></pre></td></tr></table></figure><ul><li>31</li></ul><blockquote><p>Name: branch<br>Level: 31<br>Difficulty: *</p></blockquote><p>You want to work on a piece of code that has the potential to break things, create the branch test_code.</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>test_code</span><br></pre></td></tr></table></figure><ul><li>32</li></ul><blockquote><p>Name: checkout<br>Level: 32<br>Difficulty: **</p></blockquote><p>Create and switch to a new branch called my_branch.  You will need to create a branch like you did in the previous level.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -<span class="selector-tag">b</span> my_branch</span><br></pre></td></tr></table></figure><ul><li>33</li></ul><blockquote><p>Name: checkout_tag<br>Level: 33<br>Difficulty: **</p></blockquote><p>You need to fix a bug in the version 1.2 of your app. Checkout the tag <code>v1.2</code>.</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> checkout tags/<span class="built_in">v1</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>35</li></ul><blockquote><p>Name: branch_at<br>Level: 35<br>Difficulty: ***</p></blockquote><p>You forgot to branch at the previous commit and made a commit on top of it. Create branch test_branch at the commit before the last.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -<span class="selector-tag">b</span> test_branch HEAD^</span><br></pre></td></tr></table></figure><ul><li>36</li></ul><blockquote><p>Name: delete_branch<br>Level: 36<br>Difficulty: **</p></blockquote><p>You have created too many branches for your project. There is an old branch in your repo called ‘delete_me’, you should delete it.</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>-D delete_me</span><br></pre></td></tr></table></figure><ul><li>37</li></ul><blockquote><p>Name: push_branch<br>Level: 37<br>Difficulty: **</p></blockquote><p>You’ve made some changes to a local branch and want to share it, but aren’t yet ready to merge it with the ‘master’ branch.  Push only ‘test_branch’ to the remote repository</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> test_branch</span><br></pre></td></tr></table></figure><ul><li>38</li></ul><blockquote><p>Name: merge<br>Level: 38<br>Difficulty: **</p></blockquote><p>We have a file in the branch ‘feature’; Let’s merge it to the master branch.</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">merge</span> feature</span><br></pre></td></tr></table></figure><ul><li>39</li></ul><blockquote><p>Name: fetch<br>Level: 39<br>Difficulty: **</p></blockquote><p>Looks like a new branch was pushed into our remote repository. Get the changes without merging them with the local repository </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git fetch origin</span></span><br></pre></td></tr></table></figure><ul><li>40</li></ul><blockquote><p>Name: rebase<br>Level: 40<br>Difficulty: **</p></blockquote><p>We are using a git rebase workflow and the feature branch is ready to go into master. Let’s rebase the feature branch onto our master branch.</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase <span class="keyword">master</span> <span class="title">feature</span></span><br></pre></td></tr></table></figure><ul><li>41</li></ul><blockquote><p>Name: rebase_onto<br>Level: 41<br>Difficulty: **</p></blockquote><p>You have created your branch from <code>wrong_branch</code> and already made some commits, and you realise that you needed to create your branch from <code>master</code>. Rebase your commits onto <code>master</code> branch so that you don’t have <code>wrong_branch</code> commits.</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase wrong_branch <span class="comment">--onto master</span></span><br></pre></td></tr></table></figure><ul><li>42</li></ul><blockquote><p>Name: repack<br>Level: 42<br>Difficulty: **</p></blockquote><p>Optimise how your repository is packaged ensuring that redundant packs are removed.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git repack -d</span></span><br></pre></td></tr></table></figure><ul><li>43</li></ul><blockquote><p>Name: cherry-pick<br>Level: 43<br>Difficulty: ***</p><p>Your new feature isn’t worth the time and you’re going to delete it. But it has one commit that fills in <code>README</code> file, and you want this commit to be on the master as well.</p></blockquote><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout new-feature</span><br><span class="line">git log -p README.md</span><br><span class="line">git checkout master</span><br><span class="line">git cherry-pick &#123; commit &#125;</span><br></pre></td></tr></table></figure><ul><li>44</li></ul><blockquote><p>Name: grep<br>Level: 44<br>Difficulty: **</p><p>Your project’s deadline approaches, you should evaluate how many TODOs are left in your code</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">grep</span> TODO .<span class="regexp">/</span></span><br></pre></td></tr></table></figure><ul><li>45</li></ul><blockquote><p>Name: rename_commit<br>Level: 45<br>Difficulty: ***</p><p>Correct the typo in the message of your first (non-root) commit.</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git rebase -<span class="built_in">i</span> &#123; commit &#125;</span><br><span class="line">进入编辑页面，将需要改动的行（第一行）的pick改为reword （注意，只需要通过reword来标记，不要修改拼写）。 保存退出后在弹出的第二个窗口里修改拼写错误commmit改为commit。</span><br></pre></td></tr></table></figure><ul><li>46</li></ul><blockquote><p>Name: squash<br>Level: 46<br>Difficulty: <em>**</em></p><p>You have committed several times but would like all those changes to be one commit.</p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git rebase -i HEAD~<span class="number">4</span></span><br><span class="line">(</span><br><span class="line">git rebase -i &#123; commit &#125;</span><br><span class="line">)</span><br><span class="line">将弹出编辑页的第<span class="number">2</span>、<span class="number">3</span>、<span class="number">4</span>行的pick改为squash， 第二个弹出页直接保存退出即可。</span><br></pre></td></tr></table></figure><ul><li>47</li></ul><blockquote><p>Name: merge_squash<br>Level: 47<br>Difficulty: ***</p></blockquote><blockquote><p>Merge all commits from the long-feature-branch as a single commit.</p></blockquote><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git merge --squash long-feature-branch</span><br><span class="line">git commit -m <span class="string">"47"</span></span><br></pre></td></tr></table></figure><ul><li>48</li></ul><blockquote><p>Name: reorder<br>Level: 48<br>Difficulty: <em>**</em></p><p>You have committed several times but in the wrong order. Please reorder your commits.</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git rebase -<span class="selector-tag">i</span> HEAD~<span class="number">3</span></span><br><span class="line">(</span><br><span class="line">git rebase -<span class="selector-tag">i</span> &#123; commit &#125;</span><br><span class="line">)</span><br><span class="line">把第二个提交和第三个提交换个位置</span><br></pre></td></tr></table></figure><ul><li>49</li></ul><blockquote><p>Name: bisect<br>Level: 49<br>Difficulty: ***</p><p>A bug was introduced somewhere along the way.  You know that running <code>ruby prog.rb 5</code> should output 15.  You can also run <code>make test</code>.  What are the first 7 chars of the hash of the commit that introduced the bug.</p></blockquote><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    git log -p prog.rb</span><br><span class="line">commit 18ed2ac1522a014412d4303ce7c8db39becab076</span><br><span class="line">Author: Robert Bittle &lt;guywithnose@gmail.com&gt;</span><br><span class="line">Date:   Mon Apr 23 06:52:10 2012 -0400</span><br><span class="line"></span><br><span class="line">    Another Commit</span><br><span class="line"></span><br><span class="line">diff --git a/prog.rb b/prog.rb</span><br><span class="line">index 917e700..7562257 100644</span><br><span class="line"><span class="comment">--- a/prog.rb</span></span><br><span class="line"><span class="comment">+++ b/prog.rb</span></span><br><span class="line"><span class="meta">@@ -1,3 +1,3 @@</span></span><br><span class="line">//#!/usr/bin/env ruby</span><br><span class="line"></span><br><span class="line"><span class="deletion">-puts Integer((Integer(ARGV[0])-1)*4)-1</span></span><br><span class="line"><span class="addition">+puts Integer((Integer(ARGV[0])-2)*4)-1</span></span><br><span class="line"></span><br><span class="line">这次被改掉的原表达式值为15，所以答案是这次提交的前七位commit</span><br></pre></td></tr></table></figure><ul><li>50</li></ul><blockquote><p>Name: stage_lines<br>Level: 50<br>Difficulty: <em>**</em></p><p>You’ve made changes within a single file that belong to two different features, but neither of the changes are yet staged. Stage only the changes belonging to the first feature.</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add -<span class="selector-tag">p</span> feature.rb</span><br><span class="line">输入`e`，在编辑器中删除关于second feature的修改的那一行</span><br></pre></td></tr></table></figure><ul><li>51</li></ul><blockquote><p>Name: find_old_branch<br>Level: 51<br>Difficulty: <em>**</em></p><p>You have been working on a branch but got distracted by a major issue and forgot the name of it. Switch back to that branch.</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> reflog</span><br><span class="line">git checkout solve_world_hunger</span><br></pre></td></tr></table></figure><ul><li>52</li></ul><blockquote><p>Name: revert<br>Level: 52<br>Difficulty: <em>**</em></p><p>You have committed several times but want to undo the middle commit.<br>All commits have been pushed, so you can’t change existing history.</p></blockquote><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">revert</span> HEAD~<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>53</li></ul><blockquote><p>Name: restore<br>Level: 53<br>Difficulty: <em>**</em></p><p>You decided to delete your latest commit by running <code>git reset --hard HEAD^</code>.  (Not a smart thing to do.)  You then change your mind, and want that commit back.  Restore the deleted commit.</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> reflog</span><br><span class="line">git checkout &#123; <span class="attribute">commit</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>54</li></ul><blockquote><p>Name: conflict<br>Level: 54<br>Difficulty: <em>**</em></p><p>You need to merge mybranch into the current branch (master). But there may be some incorrect changes in mybranch which may cause conflicts. Solve any merge-conflicts you come across and finish the merge.</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git merge mybranch</span><br><span class="line">vi poem.txt</span><br><span class="line">git add poem.txt</span><br><span class="line">git commit -a</span><br></pre></td></tr></table></figure><ul><li>55</li></ul><blockquote><p>Name: submodule<br>Level: 55<br>Difficulty: **</p><p>You want to include the files from the following repo: <code>https://github.com/jackmaney/githug-include-me</code> into a the folder <code>./githug-include-me</code>. Do this without cloning the repo or copying the files from the repo into this repo.</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule <span class="built_in">add</span> http<span class="variable">s:</span>//github.<span class="keyword">com</span>/jackmaney/githug-include-<span class="keyword">me</span> ./githug-include-<span class="keyword">me</span></span><br></pre></td></tr></table></figure><ul><li>56</li></ul><blockquote><p>Name: contribute<br>Level: 56<br>Difficulty: ***</p><p>This is the final level, the goal is to contribute to this repository by making a pull request on GitHub.  Please note that this level is designed to encourage you to add a valid contribution to Githug, not testing your ability to create a pull request.  Contributions that are likely to be accepted are levels, bug fixes and improved documentation.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Githug是一个git练习游戏&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004222489&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://segmentfault.com/a/11900
      
    
    </summary>
    
      <category term="开发工具" scheme="https://keepgoingwm.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
      <category term="代码管理-Git" scheme="https://keepgoingwm.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86-Git/"/>
    
    
      <category term="Git" scheme="https://keepgoingwm.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>你看不懂的JavaScript</title>
    <link href="https://keepgoingwm.github.io/posts/65009/"/>
    <id>https://keepgoingwm.github.io/posts/65009/</id>
    <published>2018-06-28T07:02:00.000Z</published>
    <updated>2018-07-18T02:52:25.760Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="你看不懂的javascript">你看不懂的JavaScript</span></h1><p>一些别有用心的写法、一些语法糖、一些巧妙的用法</p><h2><span id="语法糖-语法简略">语法糖、语法简略</span></h2><h3><span id="属性函数省略function关键字">属性函数省略function关键字</span></h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">obj &#123;</span><br><span class="line">  key1: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//something</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码可以简写为（E6提供）<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">obj </span>&#123;</span><br><span class="line">  key1 () &#123;</span><br><span class="line">    <span class="comment">//something</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="转为boolean型"><code>!!</code>转为Boolean型</span></h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!!<span class="attr">string1</span> === <span class="literal">true</span> ) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个做法很常见，简单快捷<br>针对上面的例子，更简便的写法是(因为逻辑表达式中string1会被隐式转换)，但是出于执行效率原因，应该尽量避免代码中的隐式转换<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="comment">(string1)</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><h3><span id="使用转为number类型">使用<code>+</code>转为Number类型</span></h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">+</span><span class="string">"1.1"</span>) + (<span class="name">+</span><span class="string">"1.1"</span>) // <span class="number">2.2</span></span><br></pre></td></tr></table></figure><p>这个方法比Number()简单，比ParseInt/parseFloat()通用</p><h3><span id="赋默认值"><code>||</code>赋默认值</span></h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">a</span> = <span class="keyword">a</span> || <span class="number">1</span><span class="comment"> // a如果没有值，则令a=1；在处理参数获取时很常见</span></span><br></pre></td></tr></table></figure><h3><span id="ampamp串联步进的条件执行"><code>&amp;&amp;</code>串联步进的条件执行</span></h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">user</span> <span class="title">&amp;&amp; user</span>.login(); // user不为逻辑<span class="literal">false</span>时，才执行后面的user.login()</span><br></pre></td></tr></table></figure><h3><span id="使用slice将类array转为array">使用slice将类Array转为Array</span></h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Array</span>.proto<span class="keyword">type</span>.slice.call(arguments); // turn arguments into pure array</span><br></pre></td></tr></table></figure><h2><span id="别有用心的写法">别有用心的写法</span></h2><h3><span id="将类数组转为数组">将类数组转为数组</span></h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.<span class="built_in">querySelectorAll</span>(<span class="string">"p"</span>); <span class="comment">// NodeList</span></span><br><span class="line"><span class="keyword">var</span> arrayElements = [].slice.call(elements); <span class="comment">// Now the NodeList is an array</span></span><br><span class="line"><span class="keyword">var</span> arrayElements = Array.from(elements)</span><br></pre></td></tr></table></figure><h3><span id="立即执行函数">立即执行函数</span></h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">module</span> = (<span class="keyword">function</span> ClassName() &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="number">_</span><span class="keyword">this</span> = &#123;&#125;;</span><br><span class="line">    <span class="number">_</span><span class="keyword">this</span><span class="variable">.para1</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="number">_</span><span class="keyword">this</span><span class="variable">.para2</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">_</span><span class="keyword">this</span>;</span><br><span class="line">  &#125;)()</span><br></pre></td></tr></table></figure><h3><span id="构造一个长度为20元素全为1的array">构造一个长度为20，元素全为1的Array</span></h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span>.apply(null, &#123; length: <span class="number">20</span> &#125;).map(<span class="keyword">function</span> <span class="title"></span>() &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="type">1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>结果等同于(上面的写法可以当做一个值直接使用，而这个需要有函数包裹)<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">var</span> <span class="selector-tag">a</span> = []</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.length</span> = <span class="number">20</span></span><br><span class="line"><span class="selector-tag">a</span>.fill(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></p><h3><span id="建立一个没有proto的空对象">建立一个没有<strong>proto</strong>的空对象</span></h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.create(<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><h2><span id="简约却不简单">简约却不简单</span></h2><h3><span id="将数组排序却不改变原数组">将数组排序却不改变原数组</span></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">namespaces</span><span class="selector-class">.slice</span>(0)<span class="selector-class">.sort</span>()</span><br></pre></td></tr></table></figure><h3><span id="利用对象展开和set数组去重">利用对象展开和Set数组去重</span></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> removeDuplicate = <span class="function"><span class="keyword">function</span>(<span class="params">arr</span>) </span>&#123; <span class="keyword">return</span> [...new <span class="built_in">Set</span>(arr)] &#125;</span><br></pre></td></tr></table></figure><h3><span id="对象解构的语法来获取数组的元素数组也是特殊的对象">对象解构的语法来获取数组的元素——数组也是特殊的对象</span></h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> csvFileLine = '1997,John <span class="keyword">Doe</span>,<span class="keyword">US</span>,john@<span class="keyword">doe</span>.com,New York';</span><br><span class="line"><span class="keyword">const</span> &#123; 2: country, 4: state &#125; = csvFileLine.<span class="keyword">split</span>(',');</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;你看不懂的javascript&quot;&gt;你看不懂的JavaScript&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;一些别有用心的写法、一些语法糖、一些巧妙的用法&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;语法糖-语法简略&quot;&gt;语法糖、语法简略&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;sp
      
    
    </summary>
    
      <category term="语言学习" scheme="https://keepgoingwm.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="JavaScript" scheme="https://keepgoingwm.github.io/categories/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://keepgoingwm.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>为什么喜欢egg框架</title>
    <link href="https://keepgoingwm.github.io/posts/25246/"/>
    <id>https://keepgoingwm.github.io/posts/25246/</id>
    <published>2017-08-25T03:53:04.000Z</published>
    <updated>2018-07-18T02:52:25.760Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>eggjs</code>，来自于阿里前端团队，是一个开源的Node.js服务端开发框架。它的slogan是——为企业级框架和应用而生，不华丽，只是简单的表达了它的定位。</p></blockquote><blockquote><p>从名字’egg’看，它的能力是<strong>孵化</strong>，孵化应用。使用egg框架写了一个小应用后，发现它满足了我对一个框架在开发模式上的所有幻想，并且做了更多，真心点了个赞。</p></blockquote><p><a href="https://github.com/eggjs/egg/" target="_blank" rel="noopener">eggjs git</a><br><a href="https://eggjs.org/zh-cn/" target="_blank" rel="noopener">eggjs 主页</a></p><h2><span id="说说egg的优点">说说egg的优点</span></h2><h3><span id="站在巨人的肩膀上">站在巨人的肩膀上</span></h3><ul><li>它继承于koa，拥有koa方便的Application对象结构和优秀的middlewire机制，同时把koa的基础操作封装起来，不需要使用者动手。</li><li>它可是阿里前端团队的作品，在阿里的Node.js项目中广泛使用，经历考验和蜕变</li></ul><h3><span id="简单点写作的方式简单点">简单点，写作的方式简单点</span></h3><ul><li><p>它基于目录结构解析出多个种类的内置对象，并且可以自动完成类到实例的转化。<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/17-8-24/21048490.jpg" alt=""></p></li><li><p>使用者要做的是把代码安插在合适的文件中，这使得代码结构很扁平，几乎就只需要罗列配置和方法。</p></li><li>使用者 不需要对内部对象进行维护，但却可以方便取用，因为框架会在合适的地方把它们暴露出来 。</li></ul><h3><span id="其实并不简单">其实并不简单</span></h3><ul><li>继承于koa框架，同时汲取express的历史沉淀，它已经继承和创造很多特性、插件，异常处理、会话管理、数据库管理等等都有相应的解决方案。</li><li>它拥有充分的可扩展性，它的扩展可以是插件和框架级别的，沉淀代码绝对方便。</li></ul><h3><span id="因为一致所以高度定制">因为一致，所以高度定制</span></h3><ul><li>它约束的是风格、上层的对象结构，并没有做默认的技术选型，也不默认添加可能用不到的功能。</li><li>app、框架、插件遵循相同结构，使得插件和框架的写作很方便，这就让使用者定制插件、框架都很容易，根据模板写作业务逻辑即可。</li><li>插件、框架的引入模式统一且简单，只要声明和必要的配置即可，不要处理导入、创造实例等动作。</li></ul><h3><span id="大家都要的框架来实现">大家都要的，框架来实现</span></h3><ul><li>统一清晰的配置机制，但又可以根据环境类型进行差异化配置。</li><li><p>异步编程，不需要额外编译，就可以使用async function和generator，让使用者可以优雅的同步方式编写异步代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'start run...'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">yield</span> tick(<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">yield</span> tick(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">yield</span> tick(<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>它使用cluster实现多线程，在生产环境也仅仅需要几行配置。它同时实现了不同进程类型间的通信，多进程模型绝对不是一个玩具。</p></li></ul><h3><span id="文档好才是真的好">文档好才是真的好</span></h3><ul><li>它的官方文档真的很不错，可操作性强、板块合理、内容详尽，而且颜值高<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/17-8-24/77321832.jpg" alt=""></li></ul><h2><span id="顾虑">顾虑</span></h2><h3><span id="性能">性能</span></h3><p>至少它应该不会比koa，在网上也看到，由于没有实践，不能做出评论</p>]]></content>
    
    <summary type="html">
    
      点进来看看吧
    
    </summary>
    
      <category term="默认分类" scheme="https://keepgoingwm.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="默认标签" scheme="https://keepgoingwm.github.io/tags/%E9%BB%98%E8%AE%A4%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu常用软件源</title>
    <link href="https://keepgoingwm.github.io/posts/24522/"/>
    <id>https://keepgoingwm.github.io/posts/24522/</id>
    <published>2017-08-18T07:00:08.000Z</published>
    <updated>2018-07-18T02:52:25.760Z</updated>
    
    <content type="html"><![CDATA[<html><head><br><meta http-equiv="Content-Type" content="text/html; charset=unicode"><br><title>Ubuntu常用软件源</title><br><br><style id="wiz_custom_css">html, body {font-size: 12pt;}body {font-family: Helvetica, ‘Hiragino Sans GB’, ‘微软雅黑’, ‘Microsoft YaHei UI’, SimSun, SimHei, arial, sans-serif;line-height: 1.6;margin: 0 auto;padding: 20px 16px;padding: 1.25rem 1rem;}h1, h2, h3, h4, h5, h6 {margin:20px 0 10px;margin:1.25rem 0 0.625rem;padding: 0;font-weight: bold;}h1 {font-size:20pt;font-size:1.67rem;}h2 {font-size:18pt;font-size:1.5rem;}h3 {font-size:15pt;font-size:1.25rem;}h4 {font-size:14pt;font-size:1.17rem;}h5 {font-size:12pt;font-size:1rem;}h6 {font-size:12pt;font-size:1rem;color: #777777;margin: 1rem 0;}div, p, ul, ol, dl, li {margin:0;}blockquote, table, pre, code {margin:8px 0;}ul, ol {padding-left:32px;padding-left:2rem;}ol.wiz-list-level1 &gt; li {list-style-type:decimal;}ol.wiz-list-level2 &gt; li {list-style-type:lower-latin;}ol.wiz-list-level3 &gt; li {list-style-type:lower-roman;}blockquote {padding:0 12px;padding:0 0.75rem;}blockquote &gt; :first-child {margin-top:0;}blockquote &gt; :last-child {margin-bottom:0;}img {border:0;max-width:100%;height:auto !important;margin:2px 0;}table {border-collapse:collapse;border:1px solid #bbbbbb;}td, th {padding:4px 8px;border-collapse:collapse;border:1px solid #bbbbbb;min-height:28px;word-break:break-all;box-sizing: border-box;}.wiz-hide {display:none !important;}</style></head><br><br><body spellcheck="false" class=""><div>14.04</div><div><br></div><div># 163</div><div>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty main restricted universe multiverse</div><div>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-security main restricted universe multiverse</div><div>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-updates main restricted universe multiverse</div><div>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-proposed main restricted universe multiverse</div><div>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-backports main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-security main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-updates main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-proposed main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.163.com/ubuntu/</a> trusty-backports main restricted universe multiverse</div><div><br></div><div><div>#aliyun</div><div>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty main restricted universe multiverse</div><div>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-security main restricted universe multiverse</div><div>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-updates main restricted universe multiverse</div><div>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-proposed main restricted universe multiverse</div><div>deb <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-backports main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-security main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-updates main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-proposed main restricted universe multiverse</div><div>deb-src <a href="http://mirrors.aliyun.com/ubuntu/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu/</a> trusty-backports main restricted universe multiverse</div><div><br></div></div><div>比较快的国内源</div><div><a href="http://zhoushijun.iteye.com/blog/1942475/" target="_blank" rel="noopener">http://zhoushijun.iteye.com/blog/1942475/</a></div><div> <br></div><div>清华大学开源软件镜像站<br></div><div><a href="https://mirrors.tuna.tsinghua.edu.cn/status/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/status/</a></div><div> <br></div><div><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-size: 0.75rem; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);"><div style="color:gray"><small><a href="http://www.cnblogs.com/krazysky/p/3683991.html" target="_blank" rel="noopener"></a></small></div></pre></div></body></html>]]></content>
    
    <summary type="html">
    
      点进来看看吧
    
    </summary>
    
      <category term="计算机公共" scheme="https://keepgoingwm.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1/"/>
    
      <category term="操作系统" scheme="https://keepgoingwm.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="linux" scheme="https://keepgoingwm.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/"/>
    
    
      <category term="默认标签" scheme="https://keepgoingwm.github.io/tags/%E9%BB%98%E8%AE%A4%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>css学习之background-size</title>
    <link href="https://keepgoingwm.github.io/posts/6686/"/>
    <id>https://keepgoingwm.github.io/posts/6686/</id>
    <published>2017-01-17T13:36:18.000Z</published>
    <updated>2018-07-18T02:52:25.760Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="background-size属性">background-size属性</span></h2><p>background-size: auto(原始图片大小) || number(数值) || percentage(百分比) || cover(放大铺满) || contain(缩小铺满)</p><h2><span id="试验">试验</span></h2><iframe scrolling="no" width="600" height="300" src="//jsfiddle.net/Lg9e483L/embedded/result/light" frameborder="0" allowfullscreen></iframe><h2><span id="总结">总结</span></h2>]]></content>
    
    <summary type="html">
    
      css学习之background-size
    
    </summary>
    
      <category term="web开发" scheme="https://keepgoingwm.github.io/categories/web%E5%BC%80%E5%8F%91/"/>
    
      <category term="css" scheme="https://keepgoingwm.github.io/categories/web%E5%BC%80%E5%8F%91/css/"/>
    
    
      <category term="css" scheme="https://keepgoingwm.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>网络代理初识</title>
    <link href="https://keepgoingwm.github.io/posts/36180/"/>
    <id>https://keepgoingwm.github.io/posts/36180/</id>
    <published>2016-12-27T14:09:00.000Z</published>
    <updated>2018-07-18T02:52:25.760Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="网络代理初识正向代理与反向代理">网络代理初识——正向代理与反向代理</span></h1><h2><span id="引入">引入</span></h2><p>代理对很多计算机小白来说是个很玄妙的词，对他们和曾经的我来说，代理意味着可以访问Google和Facebook，有个更通俗的描述叫“翻墙”。<br>直到最近才发现，把一个域名解析到某个IP的特定端口，这种操作实际上也是一种代理，而它与“翻墙”相比，恰好是代理的两种方式——前者是<strong>正向代理</strong>，后者是<strong>反向代理</strong>。<br>这里直接引一块玉（如果懒的看，可以直接跳过，试着让我来解释）,</p><blockquote><p><a href="https://www.zhihu.com/question/24723688" title="知乎——反向代理为何叫反向代理？" target="_blank" rel="noopener">知乎——反向代理为何叫反向代理？</a></p></blockquote><h2><span id="学习与总结">学习与总结</span></h2><p>知乎上回答中的图片很清晰<br><img src="http://7xumuq.com1.z0.glb.clouddn.com/18-6-28/48791755.jpg" alt="正向代理"><br><img src="http://7xumuq.com1.z0.glb.clouddn.com/18-6-28/15549619.jpg" alt="反向代理"></p><p>描述实际上也很易懂：</p><ul><li><strong>正向代理</strong>： 在客户端不能直接访问到服务端时，代理服务器将客户端需求转给服务端，并且把服务端的处理结果返还给客户端</li><li><strong>反向代理</strong>： 客户端发出需求到代理服务器，代理服务器根据一定的原则将需求交给某（几）个服务器处理，并且返还处理结果</li></ul><h2><span id="延伸思考">延伸思考</span></h2><h3><span id="正向代理">正向代理</span></h3><p>通过上面的学习，很容易理解到，正向代理可以解决“墙”的问题，只要代理服务器是我们能访问到的</p><h3><span id="反向代理">反向代理</span></h3><p>反向代理既然能在代理服务器这个节点上出现一对多的分散访问，<br>1 我们常说的“负载均衡”就必然是它的一个应用方向<br>2 代理服务器能接受到客户端的需求，那么它就可以根据需求的特征来按需分发处理请求，比如按照请求人的名字、区域、喜好来分配服务器<br>3 一个在开发过程很需要的用途——将大网请求按照特征分发到局域网</p>]]></content>
    
    <summary type="html">
    
      网络代理的简单学习
    
    </summary>
    
      <category term="计算机公共" scheme="https://keepgoingwm.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1/"/>
    
      <category term="计算机网络" scheme="https://keepgoingwm.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="https://keepgoingwm.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="学习总结" scheme="https://keepgoingwm.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
